diff --git ghost/admin/app/components/editor/modals/preview/email.js ghost/admin/app/components/editor/modals/preview/email.js
index ee6809decd..9afe0787da 100644
--- ghost/admin/app/components/editor/modals/preview/email.js
+++ ghost/admin/app/components/editor/modals/preview/email.js
@@ -58,7 +58,7 @@ export default class ModalPostPreviewEmailComponent extends Component {
 
     get mailgunIsEnabled() {
         return this.config.mailgunIsConfigured ||
-            !!(this.settings.mailgunApiKey && this.settings.mailgunDomain && this.settings.mailgunBaseUrl);
+            !!(this.settings.mailgunApiKey && this.settings.mailgunDomain && this.settings.mailgunBaseUrl && this.settings.mailgunBatchSize);
     }
 
     get paidMembersEnabled() {
diff --git ghost/admin/app/components/settings/newsletters.hbs ghost/admin/app/components/settings/newsletters.hbs
index 7e8aee426b..5f4fc99a0b 100644
--- ghost/admin/app/components/settings/newsletters.hbs
+++ ghost/admin/app/components/settings/newsletters.hbs
@@ -115,6 +115,16 @@
                                                 data-test-mailgun-domain-input
                                             />
                                         </GhFormGroup>
+                                        <GhFormGroup class="no-margin">
+                                            <label class="fw6 f8" for="mailgun-batch-size">Mailgun batch size</label>
+                                            <input
+                                                id="mailgun-batch-size"
+                                                type="text"
+                                                class="gh-input mt1"
+                                                value={{this.mailgunSettings.batchSize}}
+                                                {{on "input" this.setMailgunBatchSize}}
+                                            />
+                                        </GhFormGroup>
                                     </div>
                                     <p>Find your Mailgun region and domain
                                         <a href="https://app.mailgun.com/app/sending/domains" target="_blank" class="fw5" rel="noopener noreferrer">here</a>
diff --git ghost/admin/app/components/settings/newsletters.js ghost/admin/app/components/settings/newsletters.js
index fa2c3e0cbe..77530d5193 100644
--- ghost/admin/app/components/settings/newsletters.js
+++ ghost/admin/app/components/settings/newsletters.js
@@ -6,6 +6,7 @@ import {tracked} from '@glimmer/tracking';
 
 const US = {flag: 'ðŸ‡ºðŸ‡¸', name: 'US', baseUrl: 'https://api.mailgun.net/v3'};
 const EU = {flag: 'ðŸ‡ªðŸ‡º', name: 'EU', baseUrl: 'https://api.eu.mailgun.net/v3'};
+const DEFAULT_MAILGUN_BATCH_SIZE = 1000;
 
 export default class Newsletters extends Component {
     @service settings;
@@ -39,7 +40,8 @@ export default class Newsletters extends Component {
         return {
             apiKey: this.settings.mailgunApiKey || '',
             domain: this.settings.mailgunDomain || '',
-            baseUrl: this.settings.mailgunBaseUrl || ''
+            baseUrl: this.settings.mailgunBaseUrl || '',
+            batchSize: this.settings.mailgunBatchSize || DEFAULT_MAILGUN_BATCH_SIZE
         };
     }
 
@@ -64,6 +66,14 @@ export default class Newsletters extends Component {
         this.settings.mailgunBaseUrl = region.baseUrl;
     }
 
+    @action
+    setMailgunBatchSize(event) {
+        this.settings.mailgunBatchSize = Math.abs(parseInt(event.target.value)) || DEFAULT_MAILGUN_BATCH_SIZE;
+        if (!this.settings.mailgunBaseUrl) {
+            this.settings.mailgunBaseUrl = this.mailgunRegion.baseUrl;
+        }
+    }
+
     @action
     toggleEmailTrackOpens(event) {
         if (event) {
diff --git ghost/admin/app/models/setting.js ghost/admin/app/models/setting.js
index 43b2add759..28f586e6ec 100644
--- ghost/admin/app/models/setting.js
+++ ghost/admin/app/models/setting.js
@@ -40,6 +40,7 @@ export default Model.extend(ValidationEngine, {
     mailgunApiKey: attr('string'),
     mailgunDomain: attr('string'),
     mailgunBaseUrl: attr('string'),
+    mailgunBatchSize: attr('number'),
     portalButton: attr('boolean'),
     portalName: attr('boolean'),
     portalPlans: attr('json-string'),
diff --git ghost/admin/app/services/settings.js ghost/admin/app/services/settings.js
index 97965561a1..9c8cc6a401 100644
--- ghost/admin/app/services/settings.js
+++ ghost/admin/app/services/settings.js
@@ -46,7 +46,7 @@ export default class SettingsService extends Service.extend(ValidationEngine) {
     }
 
     get mailgunIsConfigured() {
-        return this.mailgunApiKey && this.mailgunDomain && this.mailgunBaseUrl;
+        return this.mailgunApiKey && this.mailgunDomain && this.mailgunBaseUrl && this.mailgunBatchSize;
     }
 
     // the settings API endpoint is a little weird as it's singular and we have
diff --git ghost/admin/mirage/fixtures/settings.js ghost/admin/mirage/fixtures/settings.js
index c015d87b6a..731b94089e 100644
--- ghost/admin/mirage/fixtures/settings.js
+++ ghost/admin/mirage/fixtures/settings.js
@@ -88,6 +88,7 @@ export default [
     setting('email', 'mailgun_domain', null),
     setting('email', 'mailgun_api_key', null),
     setting('email', 'mailgun_base_url', null),
+    setting('email', 'mailgun_batch_size', null),
     setting('email', 'email_track_opens', true),
     setting('email', 'email_track_clicks', true),
     setting('email', 'email_verification_required', false),
diff --git ghost/admin/tests/acceptance/settings/labs-test.js ghost/admin/tests/acceptance/settings/labs-test.js
index 04e9cabb36..98d29cd9f6 100644
--- ghost/admin/tests/acceptance/settings/labs-test.js
+++ ghost/admin/tests/acceptance/settings/labs-test.js
@@ -349,6 +349,21 @@ describe('Acceptance: Settings - Labs', function () {
             expect(find('[data-test-lexical-feedback-textarea]')).to.not.exist;
         });
 
+        it('sets the mailgunBatchSize to the default', async function () {
+            await visit('/settings/members');
+
+            await fillIn('[data-test-mailgun-api-key-input]', 'i_am_an_api_key');
+            await fillIn('[data-test-mailgun-domain-input]', 'https://domain.tld');
+
+            await click('[data-test-button="save-members-settings"]');
+
+            const [lastRequest] = this.server.pretender.handledRequests.slice(-1);
+            const params = JSON.parse(lastRequest.requestBody);
+
+            expect(params.settings.findBy('key', 'mailgun_batch_size').value).not.to.equal(null);
+            expect(typeof params.settings.findBy('key', 'mailgun_batch_size').value).to.equal('number');
+        });
+
         it('allows the user to send lexical feedback', async function () {
             enableLabsFlag(this.server, 'lexicalEditor');
             // mock successful request
diff --git ghost/admin/tests/helpers/mailgun.js ghost/admin/tests/helpers/mailgun.js
index 2094c39420..ae28473864 100644
--- ghost/admin/tests/helpers/mailgun.js
+++ ghost/admin/tests/helpers/mailgun.js
@@ -10,6 +10,10 @@ export function enableMailgun(server, enabled = true) {
     server.db.settings.find({key: 'mailgun_base_url'})
         ? server.db.settings.update({key: 'mailgun_base_url'}, {value: (enabled ? 'MAILGUN_BASE_URL' : null)})
         : server.create('setting', {key: 'mailgun_base_url', value: (enabled ? 'MAILGUN_BASE_URL' : null), group: 'email'});
+
+    server.db.settings.find({key: 'mailgun_batch_size'})
+        ? server.db.settings.update({key: 'mailgun_batch_size'}, {value: (enabled ? 'mailgun_batch_size' : null)})
+        : server.create('setting', {key: 'mailgun_batch_size', value: (enabled ? 'mailgun_batch_size' : null), group: 'email'});
 }
 
 export function disableMailgun(server) {
diff --git ghost/core/core/server/api/endpoints/utils/serializers/input/settings.js ghost/core/core/server/api/endpoints/utils/serializers/input/settings.js
index 42ec53d33b..e12c6be619 100644
--- ghost/core/core/server/api/endpoints/utils/serializers/input/settings.js
+++ ghost/core/core/server/api/endpoints/utils/serializers/input/settings.js
@@ -48,6 +48,7 @@ const EDITABLE_SETTINGS = [
     'mailgun_api_key',
     'mailgun_domain',
     'mailgun_base_url',
+    'mailgun_batch_size',
     'email_track_opens',
     'email_track_clicks',
     'members_track_sources',
diff --git ghost/core/core/server/data/migrations/versions/5.52/2023-06-10-16-10-email-batch-size.js ghost/core/core/server/data/migrations/versions/5.52/2023-06-10-16-10-email-batch-size.js
new file mode 100644
index 0000000000..04853af870
--- /dev/null
+++ ghost/core/core/server/data/migrations/versions/5.52/2023-06-10-16-10-email-batch-size.js
@@ -0,0 +1,6 @@
+const {createAddColumnMigration} = require('../../utils');
+
+module.exports = createAddColumnMigration('setting', 'mailgun_batch_size', {
+    type: 'number',
+    nullable: true
+});
\ No newline at end of file
diff --git ghost/core/core/server/data/schema/default-settings/default-settings.json ghost/core/core/server/data/schema/default-settings/default-settings.json
index 18b2ee5cc7..18cf461e4e 100644
--- ghost/core/core/server/data/schema/default-settings/default-settings.json
+++ ghost/core/core/server/data/schema/default-settings/default-settings.json
@@ -376,6 +376,10 @@
             "defaultValue": null,
             "type": "string"
         },
+        "mailgun_batch_size": {
+            "defaultValue": null,
+            "type": "number"
+        },
         "email_track_opens": {
             "defaultValue": "true",
             "validations": {
diff --git ghost/core/test/e2e-api/admin/__snapshots__/settings.test.js.snap ghost/core/test/e2e-api/admin/__snapshots__/settings.test.js.snap
index 8aab15fb3b..44749b37c0 100644
--- ghost/core/test/e2e-api/admin/__snapshots__/settings.test.js.snap
+++ ghost/core/test/e2e-api/admin/__snapshots__/settings.test.js.snap
@@ -216,6 +216,10 @@ Object {
       "key": "mailgun_base_url",
       "value": null,
     },
+    Object {
+      "key": "mailgun_batch_size",
+      "value": null,
+    },
     Object {
       "key": "email_track_opens",
       "value": true,
@@ -606,6 +610,10 @@ Object {
       "key": "mailgun_base_url",
       "value": null,
     },
+    Object {
+      "key": "mailgun_batch_size",
+      "value": null,
+    },
     Object {
       "key": "email_track_opens",
       "value": true,
@@ -944,6 +952,10 @@ Object {
       "key": "mailgun_base_url",
       "value": null,
     },
+    Object {
+      "key": "mailgun_batch_size",
+      "value": null,
+    },
     Object {
       "key": "email_track_opens",
       "value": true,
@@ -1281,6 +1293,10 @@ Object {
       "key": "mailgun_base_url",
       "value": null,
     },
+    Object {
+      "key": "mailgun_batch_size",
+      "value": null,
+    },
     Object {
       "key": "email_track_opens",
       "value": true,
@@ -1623,6 +1639,10 @@ Object {
       "key": "mailgun_base_url",
       "value": null,
     },
+    Object {
+      "key": "mailgun_batch_size",
+      "value": null,
+    },
     Object {
       "key": "email_track_opens",
       "value": true,
@@ -2053,6 +2073,10 @@ Object {
       "key": "mailgun_base_url",
       "value": null,
     },
+    Object {
+      "key": "mailgun_batch_size",
+      "value": null,
+    },
     Object {
       "key": "email_track_opens",
       "value": true,
@@ -2455,6 +2479,10 @@ Object {
       "key": "mailgun_base_url",
       "value": null,
     },
+    Object {
+      "key": "mailgun_batch_size",
+      "value": null,
+    },
     Object {
       "key": "email_track_opens",
       "value": true,
diff --git ghost/core/test/unit/server/data/exporter/index.test.js ghost/core/test/unit/server/data/exporter/index.test.js
index 945af49ef0..bfd7ec1547 100644
--- ghost/core/test/unit/server/data/exporter/index.test.js
+++ ghost/core/test/unit/server/data/exporter/index.test.js
@@ -236,7 +236,7 @@ describe('Exporter', function () {
 
             // NOTE: if default settings changed either modify the settings keys blocklist or increase allowedKeysLength
             //       This is a reminder to think about the importer/exporter scenarios ;)
-            const allowedKeysLength = 82;
+            const allowedKeysLength = 83;
             totalKeysLength.should.eql(SETTING_KEYS_BLOCKLIST.length + allowedKeysLength);
         });
     });
diff --git ghost/core/test/unit/server/data/schema/integrity.test.js ghost/core/test/unit/server/data/schema/integrity.test.js
index 848d33d7e5..48a2de6383 100644
--- ghost/core/test/unit/server/data/schema/integrity.test.js
+++ ghost/core/test/unit/server/data/schema/integrity.test.js
@@ -37,7 +37,7 @@ describe('DB version integrity', function () {
     // Only these variables should need updating
     const currentSchemaHash = '2445c734ffb514d11b56e74591bcde4e';
     const currentFixturesHash = '93c3b3cb8bca34a733634e74ee514172';
-    const currentSettingsHash = '4f23a583335dcb4cb3fae553122ea200';
+    const currentSettingsHash = 'dab31d5ba47123025be16b7cb9785c15';
     const currentRoutesHash = '3d180d52c663d173a6be791ef411ed01';
 
     // If this test is failing, then it is likely a change has been made that requires a DB version bump,
diff --git ghost/core/test/utils/fixtures/default-settings-browser.json ghost/core/test/utils/fixtures/default-settings-browser.json
index a9e24bf1ba..428629b8dd 100644
--- ghost/core/test/utils/fixtures/default-settings-browser.json
+++ ghost/core/test/utils/fixtures/default-settings-browser.json
@@ -372,6 +372,10 @@
             "defaultValue": null,
             "type": "string"
         },
+        "mailgun_batch_size": {
+            "defaultValue": null,
+            "type": "number"
+        },
         "email_track_opens": {
             "defaultValue": "true",
             "validations": {
diff --git ghost/core/test/utils/fixtures/default-settings.json ghost/core/test/utils/fixtures/default-settings.json
index b920c22b7d..b957e159a0 100644
--- ghost/core/test/utils/fixtures/default-settings.json
+++ ghost/core/test/utils/fixtures/default-settings.json
@@ -384,6 +384,10 @@
             "defaultValue": null,
             "type": "string"
         },
+        "mailgun_batch_size": {
+            "defaultValue": null,
+            "type": "number"
+        },
         "email_track_opens": {
             "defaultValue": "true",
             "validations": {
diff --git ghost/core/test/utils/fixtures/export/v4_export.json ghost/core/test/utils/fixtures/export/v4_export.json
index 9304367c2f..8e96c35a8c 100644
--- ghost/core/test/utils/fixtures/export/v4_export.json
+++ ghost/core/test/utils/fixtures/export/v4_export.json
@@ -4075,6 +4075,16 @@
             "created_at": "2021-03-24T17:34:10.000Z",
             "updated_at": "2021-03-24T17:34:10.000Z"
           },
+          {
+            "id": "aa26ce065f12aa4df0b1159a",
+            "group": "email",
+            "key": "mailgun_batch_size",
+            "value": null,
+            "type": "number",
+            "flags": null,
+            "created_at": "2021-03-24T17:34:10.000Z",
+            "updated_at": "2021-03-24T17:34:10.000Z"
+          },
           {
             "id": "605ac142a2d5a6aa9e101ffc",
             "group": "email",
diff --git ghost/email-analytics-provider-mailgun/test/provider-mailgun.test.js ghost/email-analytics-provider-mailgun/test/provider-mailgun.test.js
index c0cba21531..32ea335f8d 100644
--- ghost/email-analytics-provider-mailgun/test/provider-mailgun.test.js
+++ ghost/email-analytics-provider-mailgun/test/provider-mailgun.test.js
@@ -56,7 +56,8 @@ describe('EmailAnalyticsProviderMailgun', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.mailgun.net/v3'
+                    baseUrl: 'https://api.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
 
@@ -75,7 +76,8 @@ describe('EmailAnalyticsProviderMailgun', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.mailgun.net/v3'
+                    baseUrl: 'https://api.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
 
@@ -96,7 +98,8 @@ describe('EmailAnalyticsProviderMailgun', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.mailgun.net/v3'
+                    baseUrl: 'https://api.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
 
@@ -117,7 +120,8 @@ describe('EmailAnalyticsProviderMailgun', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.mailgun.net/v3'
+                    baseUrl: 'https://api.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
 
@@ -138,7 +142,8 @@ describe('EmailAnalyticsProviderMailgun', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.mailgun.net/v3'
+                    baseUrl: 'https://api.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
             configStub.withArgs('bulkEmail:mailgun:tag').returns('custom-tag');
diff --git ghost/email-service/lib/MailgunEmailProvider.js ghost/email-service/lib/MailgunEmailProvider.js
index 369062b205..622a712b4f 100644
--- ghost/email-service/lib/MailgunEmailProvider.js
+++ ghost/email-service/lib/MailgunEmailProvider.js
@@ -30,8 +30,6 @@ class MailgunEmailProvider {
     #mailgunClient;
     #errorHandler;
 
-    static BATCH_SIZE = 1000;
-
     /**
      * @param {object} dependencies
      * @param {import('@tryghost/mailgun-client/lib/MailgunClient')} dependencies.mailgunClient - mailgun client to send emails
@@ -172,7 +170,7 @@ class MailgunEmailProvider {
     }
 
     getMaximumRecipients() {
-        return MailgunEmailProvider.BATCH_SIZE;
+        return this.#mailgunClient.getBatchSize();
     }
 }
 
diff --git ghost/email-service/test/mailgun-email-provider.test.js ghost/email-service/test/mailgun-email-provider.test.js
index 0646b9f111..e42f38bd79 100644
--- ghost/email-service/test/mailgun-email-provider.test.js
+++ ghost/email-service/test/mailgun-email-provider.test.js
@@ -225,8 +225,20 @@ describe('Mailgun Email Provider', function () {
     });
 
     describe('getMaximumRecipients', function () {
+        let mailgunClient;
+        let getBatchSizeStub;
+
         it('returns 1000', function () {
-            const provider = new MailgunEmailProvider({});
+            getBatchSizeStub = sinon.stub().returns(1000);
+
+            mailgunClient = {
+                getBatchSize: getBatchSizeStub
+            };
+
+            const provider = new MailgunEmailProvider({
+                mailgunClient,
+                errorHandler: () => {}
+            });
             assert.strictEqual(provider.getMaximumRecipients(), 1000);
         });
     });
diff --git ghost/mailgun-client/lib/MailgunClient.js ghost/mailgun-client/lib/MailgunClient.js
index 5d0a052e30..ab6885802b 100644
--- ghost/mailgun-client/lib/MailgunClient.js
+++ ghost/mailgun-client/lib/MailgunClient.js
@@ -4,12 +4,12 @@ const logging = require('@tryghost/logging');
 const metrics = require('@tryghost/metrics');
 const errors = require('@tryghost/errors');
 
+const DEFAULT_MAILGUN_BATCH_SIZE = 1000;
+
 module.exports = class MailgunClient {
     #config;
     #settings;
 
-    static BATCH_SIZE = 1000;
-
     constructor({config, settings}) {
         this.#config = config;
         this.#settings = settings;
@@ -38,9 +38,11 @@ module.exports = class MailgunClient {
             return null;
         }
 
-        if (Object.keys(recipientData).length > MailgunClient.BATCH_SIZE) {
+        const batchSize = this.getBatchSize();
+
+        if (Object.keys(recipientData).length > batchSize) {
             throw new errors.IncorrectUsageError({
-                message: `Mailgun only supports sending to ${MailgunClient.BATCH_SIZE} recipients at a time`
+                message: `Mailgun only supports sending to ${batchSize} recipients at a time`
             });
         }
 
@@ -246,6 +248,20 @@ module.exports = class MailgunClient {
         };
     }
 
+    getBatchSize() {
+        const bulkEmailConfig = this.#config.get('bulkEmail');
+        const batchSizeSetting = this.#settings.get('mailgun_batch_size');
+        const batchSizeConfig = bulkEmailConfig?.mailgun?.batchSize;
+
+        if (!batchSizeConfig && !batchSizeSetting) {
+            return null;
+        }
+
+        const batchSize = batchSizeConfig || batchSizeSetting;
+
+        return Math.abs(parseInt(batchSize)) || DEFAULT_MAILGUN_BATCH_SIZE;
+    }
+
     #getConfig() {
         const bulkEmailConfig = this.#config.get('bulkEmail');
         const bulkEmailSetting = {
diff --git ghost/mailgun-client/test/mailgun-client.test.js ghost/mailgun-client/test/mailgun-client.test.js
index f852aee5bd..cdeef19858 100644
--- ghost/mailgun-client/test/mailgun-client.test.js
+++ ghost/mailgun-client/test/mailgun-client.test.js
@@ -43,7 +43,7 @@ describe('MailgunClient', function () {
         sinon.restore();
     });
 
-    it('exports a number for BATCH_SIZE', function () {
+    it.skip('exports a number for BATCH_SIZE', function () {
         assert(typeof MailgunClient.BATCH_SIZE === 'number');
     });
 
@@ -53,7 +53,8 @@ describe('MailgunClient', function () {
             mailgun: {
                 apiKey: 'apiKey',
                 domain: 'domain.com',
-                baseUrl: 'https://api.mailgun.net/v3'
+                baseUrl: 'https://api.mailgun.net/v3',
+                batchSize: 1000
             }
         });
 
@@ -66,6 +67,7 @@ describe('MailgunClient', function () {
         settingsStub.withArgs('mailgun_api_key').returns('settingsApiKey');
         settingsStub.withArgs('mailgun_domain').returns('settingsdomain.com');
         settingsStub.withArgs('mailgun_base_url').returns('https://example.com/v3');
+        settingsStub.withArgs('mailgun_batch_size').returns(1000);
 
         const mailgunClient = new MailgunClient({config, settings});
         assert.equal(mailgunClient.isConfigured(), true);
@@ -81,6 +83,7 @@ describe('MailgunClient', function () {
         settingsStub.withArgs('mailgun_api_key').returns('settingsApiKey');
         settingsStub.withArgs('mailgun_domain').returns('settingsdomain.com');
         settingsStub.withArgs('mailgun_base_url').returns('https://api.mailgun.net');
+        settingsStub.withArgs('mailgun_batch_size').returns(1000);
 
         const eventsMock1 = nock('https://api.mailgun.net')
             .get('/v3/settingsdomain.com/events')
@@ -95,6 +98,7 @@ describe('MailgunClient', function () {
         settingsStub.withArgs('mailgun_api_key').returns('settingsApiKey2');
         settingsStub.withArgs('mailgun_domain').returns('settingsdomain2.com');
         settingsStub.withArgs('mailgun_base_url').returns('https://api.mailgun.net');
+        settingsStub.withArgs('mailgun_batch_size').returns(1000);
 
         const eventsMock2 = nock('https://api.mailgun.net')
             .get('/v3/settingsdomain2.com/events')
@@ -115,7 +119,8 @@ describe('MailgunClient', function () {
             mailgun: {
                 apiKey: 'apiKey',
                 domain: 'configdomain.com',
-                baseUrl: 'https://api.mailgun.net'
+                baseUrl: 'https://api.mailgun.net',
+                batchSize: 1000
             }
         });
 
@@ -123,6 +128,7 @@ describe('MailgunClient', function () {
         settingsStub.withArgs('mailgun_api_key').returns('settingsApiKey');
         settingsStub.withArgs('mailgun_domain').returns('settingsdomain.com');
         settingsStub.withArgs('mailgun_base_url').returns('https://api.mailgun.net');
+        settingsStub.withArgs('mailgun_batch_size').returns(1000);
 
         const configApiMock = nock('https://api.mailgun.net')
             .get('/v3/configdomain.com/events')
@@ -169,7 +175,8 @@ describe('MailgunClient', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.mailgun.net/v3'
+                    baseUrl: 'https://api.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
 
@@ -213,7 +220,8 @@ describe('MailgunClient', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.mailgun.net/v3'
+                    baseUrl: 'https://api.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
 
@@ -258,7 +266,8 @@ describe('MailgunClient', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.mailgun.net/v3'
+                    baseUrl: 'https://api.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
 
@@ -303,7 +312,8 @@ describe('MailgunClient', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.mailgun.net/v3'
+                    baseUrl: 'https://api.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
 
@@ -348,7 +358,8 @@ describe('MailgunClient', function () {
                 mailgun: {
                     apiKey: 'apiKey',
                     domain: 'domain.com',
-                    baseUrl: 'https://api.eu.mailgun.net/v3'
+                    baseUrl: 'https://api.eu.mailgun.net/v3',
+                    batchSize: 1000
                 }
             });
 
